<%- include("templates/header") %>

<head>
  <!-- Load styles here -->
  <link rel="stylesheet" href="/styles/main_map.css" />
</head>

<body>
  <div class="d-flex justify-content-center">
		<div class="col-lg-3 col-md-4 col-sm-12"></div>
		<div class="col-lg-6 col-md-4 col-sm-12 d-flex justify-content-center">
			<div id="map" style="width: 1600px; height: 725px;"></div>
		</div>
		<div class="col-lg-3 col-md-4 col-sm-12"></div>
	</div>
	

  <!-- Load scripts here -->
  <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAPFKFtKYoZT8kPL4P4CP_U7WoxhaM0S8k&callback=initMap" async defer></script> <!-- Replace YOUR_GOOGLE_MAPS_API_KEY with your actual API key -->

  <script>
    function initMap() {
			const mapElement = document.getElementById("map");

// Check if Geolocation API is supported
if (navigator.geolocation) {
  navigator.geolocation.getCurrentPosition(
    (position) => {
      const userLatLng = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };

      const map = new google.maps.Map(mapElement, {
        center: userLatLng,
        zoom: 15,
      });

      // Optionally, you can add a marker at the user's position
      new google.maps.Marker({
        position: userLatLng,
        map: map,
        title: "You are here"
      });
    },
    (error) => {
      console.error("Error getting user's location:", error);
      // Fallback: Center the map on a default location
      const defaultLatLng = { lat: -33.866, lng: 151.196 };
      const map = new google.maps.Map(mapElement, {
        center: defaultLatLng,
        zoom: 15,
      });
    }
  );
} else {
  console.error("Geolocation is not supported by this browser.");
  // Fallback: Center the map on a default location
  const defaultLatLng = { lat: -33.866, lng: 151.196 };
  const map = new google.maps.Map(mapElement, {
    center: defaultLatLng,
    zoom: 15,
  });
}
  const request = {
    placeId: "ChIJN1t_tDeuEmsRUsoyG83frY4",
    fields: ["name", "formatted_address", "place_id", "geometry"],
  };
  const infowindow = new google.maps.InfoWindow();
  const service = new google.maps.places.PlacesService(map);

  service.getDetails(request, (place, status) => {
    if (
      status === google.maps.places.PlacesServiceStatus.OK &&
      place &&
      place.geometry &&
      place.geometry.location
    ) {
      const marker = new google.maps.Marker({
        map,
        position: place.geometry.location,
      });

      google.maps.event.addListener(marker, "click", () => {
        const content = document.createElement("div");
        const nameElement = document.createElement("h2");

        nameElement.textContent = place.name;
        content.appendChild(nameElement);

        const placeIdElement = document.createElement("p");

        placeIdElement.textContent = place.place_id;
        content.appendChild(placeIdElement);

        const placeAddressElement = document.createElement("p");

        placeAddressElement.textContent = place.formatted_address;
        content.appendChild(placeAddressElement);
        infowindow.setContent(content);
        infowindow.open(map, marker);
      });
    }
  });
	setMarkers(map);
}

'use strict';


    // Data for the markers consisting of a name, a LatLng, a zIndex, and an image URL for the flag
    const locations = [
      { name: "Brentwood station", lat: 48.563076, lng: -123.466542, zIndex: 4, imageUrl: "https://example.com/flag1.png" },
      { name: "Burnaby Museum", lat: 49.2392512284724, lng: -122.96579117439661, zIndex: 5, imageUrl: "https://example.com/flag2.png" },
      { name: "Cronulla Beach", lat: -34.028249, lng: 151.157507, zIndex: 3, imageUrl: "https://example.com/flag3.png" },
      { name: "Manly Beach", lat: -33.80010128657071, lng: 151.28747820854187, zIndex: 2, imageUrl: "https://example.com/flag4.png" },
      { name: "Maroubra Beach", lat: -33.950198, lng: 151.259302, zIndex: 1, imageUrl: "https://example.com/flag5.png" }
    ];

    function setMarkers(map) {
      // Adds markers to the map.
      // Marker sizes are expressed as a Size of X,Y where the origin of the image
      // (0,0) is located in the top left of the image.
      // Origins, anchor positions and coordinates of the marker increase in the X
      // direction to the right and in the Y direction down.
      const image = {
        url: "https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png",
        // This marker is 20 pixels wide by 32 pixels high.
        size: new google.maps.Size(20, 32),
        // The origin for this image is (0, 0).
        origin: new google.maps.Point(0, 0),
        // The anchor for this image is the base of the flagpole at (0, 32).
        anchor: new google.maps.Point(0, 32),
      };
      // Shapes define the clickable region of the icon. The type defines an HTML
      // <area> element 'poly' which traces out a polygon as a series of X,Y points.
      // The final coordinate closes the poly by connecting to the first coordinate.
      const shape = {
        coords: [1, 1, 1, 20, 18, 20, 18, 1],
        type: "poly",
      };

      for (let i = 0; i < locations.length; i++) {
        const location = locations[i];

        new google.maps.Marker({
          position: { lat: location.lat, lng: location.lng },
          map,
          icon: image,
          shape: shape,
          title: location.name,
          zIndex: location.zIndex,
        });
      }
    }

    window.initMap = initMap;

  </script>
</body>

<%- include("templates/footer") %>

