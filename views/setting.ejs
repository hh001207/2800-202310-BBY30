<%- include("templates/header") %>

<head>
	<!-- Load styles here -->
	<link rel="stylesheet" href="/styles/setting.css" />
	<link rel="stylesheet" href="/styles/slider.css" />
</head>
<body>
	<!-- Body Contents -->
	<div class="container">
		<p id="setting" class="h3 text-center">Setting</p>
		<div class="row">
			<div class="col-md-3"></div>
			<div class="col-md-6">
				<ul class="list-group list-group-flush">
					<!-- other version: <ul class="list-group"> -->
					<li
						class="list-group-item"
						data-bs-toggle="collapse"
						data-bs-target="#collapseAlert"
						aria-expanded="false"
						aria-controls="collapseAlert"
					>
						<strong>Alert</strong>
					</li>

					<div class="collapse" id="collapseAlert">
						<ul class="list-group list-group-flush">
							<li class="list-group-item">
								<div class="label-wrapper">
									<span class="label-text">Show Alert</span>
									<label class="slider">
									  <input id="alertToggle" type="checkbox">
									  <span class="slider"></span>
									  
									</label>
								  </div>
							  </li>
							  
							  <li class="list-group-item">
								<div class="label-wrapper">
								   <span class="label-text">Mute</span>
								  <label class="slider">
								  <input id="alertSoundToggle" type="checkbox">
								  <span class="slider"></span>
								</label>
							  </li>
							  
							  <li class="list-group-item">
								<label for="alertDistance">Alert distance (km)</label>
								<input type="number" id="alertDistance" placeholder="1~300" name="alertDistance" min="1" max="300" required style="width: 80px;" >
							  </li>
							  
						</ul>
					</div>

					<li
						class="list-group-item"
						data-bs-toggle="collapse"
						data-bs-target="#collapseNotification"
						aria-expanded="false"
						aria-controls="collapseThird"
					>
						<strong>Notification</strong>
					</li>

					<div class="collapse" id="collapseNotification">
						<ul class="list-group list-group-flush">
							<li class="list-group-item">
								<div class="label-wrapper">
									<span class="label-text">Show Notification</span>
									<label class="slider">
									  <input id="NotiToggle" type="checkbox">
									  <span class="slider"></span>
									  
									</label>
								  </div>
							  </li>
							  
							  <li class="list-group-item">
								<div class="label-wrapper">
								   <span class="label-text">Mute</span>
								  <label class="slider">
								  <input id="NotiSoundToggle" type="checkbox">
								  <span class="slider"></span>
								</label>
							  </li>
						</ul>
					</div>

					<li
						class="list-group-item"
						data-bs-toggle="collapse"
						data-bs-target="#collapseAccount"
						aria-expanded="false"
						aria-controls="collapseThird"
					>
						<strong>Account</strong>
					</li>

					<div class="collapse" id="collapseAccount">
						<ul class="list-group list-group-flush">
							<li
								class="list-group-item"
								data-bs-toggle="collapse"
								data-bs-target="#collapseChangePassword"
								aria-expanded="false"
								aria-controls="collapseThird"
							>
								Change password
							</li>

							<div class="collapse" id="collapseChangePassword">
								<ul class="list-group list-group-flush">
									<li class="list-group-item">
										<form action="/change_password" method="post">
											<input name="new_password" type="password" placeholder="new password" required />
											<button type="submit">Submit</button>
										</form>
									</li>
								</ul>
							</div>
						</ul>
					</div>
				</ul>
			</div>
			<div class="col-md-3"></div>
		</div>
	</div>

	<!--
		toggle switch turned off
		<div class="form-check form-switch">
			<input class="form-check-input" type="checkbox" id="flexSwitchCheckDefault">
			<label class="form-check-label" for="flexSwitchCheckDefault">Toggle switch</label>
		</div>

		toggle switch turned on
		<div class="form-check form-switch">
			<input class="form-check-input" type="checkbox" id="flexSwitchCheckDefault" checked>
			<label class="form-check-label" for="flexSwitchCheckDefault">Toggle switch</label>
		</div>
	-->

	<!-- Load scripts here -->
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
	<script>
		$(document).ready(function() {
		  // Add click event listener to the on/off button
		  $("#alertToggle").click(function() {
			// Toggle the active state of the slider
			$(this).parent().toggleClass("active");
	  
			// Change the value of the checkbox based on its state
			$(this).attr("value", $(this).prop("checked") ? "on" : "off");
	  
			// Check if the slider is active
			if ($(this).prop("checked")) {
			  $(this).parent().find(".slider").addClass("active");
			} else {
			  $(this).parent().find(".slider").removeClass("active");
			}
		  });
	  
		  // Initialize the slider based on the initial checkbox state
		  var initialChecked = $("#alertToggle").prop("checked");
		  if (initialChecked) {
			$("#alertToggle").parent().find(".slider").addClass("active");
		  }
	  
		  // Add click event listener to the sound button
		  $("#alertSoundToggle").click(function() {
			// Toggle the active state of the slider
			$(this).parent().toggleClass("active");
	  
			// Change the value of the checkbox based on its state
			$(this).attr("value", $(this).prop("checked") ? "on" : "off");
	  
			// Check if the slider is active
			if ($(this).prop("checked")) {
			  $(this).parent().find(".slider").addClass("active");
			} else {
			  $(this).parent().find(".slider").removeClass("active");
			}
		  });

		  $("#NotiToggle").click(function() {
			// Toggle the active state of the slider
			$(this).parent().toggleClass("active");
	  
			// Change the value of the checkbox based on its state
			$(this).attr("value", $(this).prop("checked") ? "on" : "off");
	  
			// Check if the slider is active
			if ($(this).prop("checked")) {
			  $(this).parent().find(".slider").addClass("active");
			} else {
			  $(this).parent().find(".slider").removeClass("active");
			}
		  });
	  
		  // Initialize the slider based on the initial checkbox state
		  var initialChecked = $("#NotiToggle").prop("checked");
		  if (initialChecked) {
			$("#NotiToggle").parent().find(".slider").addClass("active");
		  }
	  
		  // Add click event listener to the sound button
		  $("#NotiSoundToggle").click(function() {
			// Toggle the active state of the slider
			$(this).parent().toggleClass("active");
	  
			// Change the value of the checkbox based on its state
			$(this).attr("value", $(this).prop("checked") ? "on" : "off");
	  
			// Check if the slider is active
			if ($(this).prop("checked")) {
			  $(this).parent().find(".slider").addClass("active");
			} else {
			  $(this).parent().find(".slider").removeClass("active");
			}
		  });
	  
		  // Initialize the sound slider based on the initial checkbox state
		  var initialNotiSoundChecked = $("#NotiSoundToggle").prop("checked");
		  if (initialNotiSoundChecked) {
			$("#NotiSoundToggle").parent().find(".slider").addClass("active");
		  }
		
		  var initialSoundChecked = $("#alertSoundToggle").prop("checked");
		  if (initialSoundChecked) {
			$("#alertSoundToggle").parent().find(".slider").addClass("active");
		  }
		});
	  </script>
	  
	  
 


</body>

<%- include("templates/footer") %>
